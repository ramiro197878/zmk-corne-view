/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB             &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_SHIFT ESC  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &mt RIGHT_SHIFT SINGLE_QUOTE
&kp LCTRL           &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RCTRL TILDE
                                  &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;

            label = "Default";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB   &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6      &kp N7    &kp N8    &kp N9      &kp N0    &kp BSPC
&kp CAPS  &trans  &trans  &trans    &trans  &trans       &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT   &kp HOME  &kp PAGE_UP
&trans    &mo 3   &trans  &trans    &trans  &trans       &kp INSERT  &trans    &trans    &kp DELETE  &kp END   &kp PAGE_DOWN
                          &kp LGUI  &trans  &kp SPACE    &kp RET     &trans    &kp RALT
            >;

            label = "Lower";
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;

            label = "Raise";
        };

        num_layer {
            bindings = <
&kp TAB         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_PLUS      &kp KP_MINUS   &kp BACKSPACE
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans        &trans          &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_CLEAR
&kp LCTRL       &trans        &trans        &trans        &trans        &bt BT_CLR      &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT       &kp KP_EQUAL   &kp KP_NUMLOCK
                                            &kp LGUI      &trans        &kp SPACE       &kp RET    &kp KP_N0  &kp RALT
            >;

            label = "Number";
        };

        Functions {
            bindings = <
&kp F1     &kp F2        &kp F3  &kp F4  &kp F5  &kp F6    &kp F7           &kp F8  &kp F9  &kp F10  &kp F11       &kp F12
&kp ESC    &trans        &trans  &trans  &trans  &trans    &kp PRINTSCREEN  &trans  &trans  &trans   &trans        &trans
&kp RCTRL  &kp LEFT_ALT  &trans  &trans  &trans  &trans    &trans           &trans  &trans  &trans   &kp LEFT_ALT  &kp LCTRL
                                 &trans  &trans  &trans    &trans           &trans  &trans
            >;

            label = "Functions";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Function_keys {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
